plugins {
    id 'java'
    id 'application'
    id 'com.zyxist.chainsaw' version '0.3.1'
    id 'org.beryx.jlink' version '1.4.4'
}

group 'se.totalorder'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_10
targetCompatibility = JavaVersion.VERSION_1_10

javaModule.name = 'se.totalorder.basen'
mainClassName = "se.totalorder.basen.Application"

repositories {
    mavenCentral()
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.zaxxer:HikariCP:3.2.0'
    compile 'org.flywaydb:flyway-core:5.1.4'
    compile 'org.postgresql:postgresql:42.2.5'
    compile 'io.javalin:javalin:2.2.0'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jlink {
    mergedModule {
        requires 'java.naming'
        requires 'java.xml'
    }

    addOptions '--strip-debug'
    addOptions '--compress', '2'
    addOptions '--no-header-files'
    addOptions '--no-man-pages'
}

jlinkZip {
    enabled = false
}


task copyDockerfile(type: Copy) {
    dependsOn(jlinkZip)

    from "Dockerfile"
    into jlink.imageDir
}

task distDocker(type: Exec) {
    dependsOn(copyDockerfile)

    workingDir jlink.imageDir
    commandLine "bash", "-c", "docker build -t ${project.name} ."
}