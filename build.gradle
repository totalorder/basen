plugins {
    id 'java'
    id 'application'
    id 'io.franzbecker.gradle-lombok' version '1.14'
}

group 'se.totalorder'
version '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_10
targetCompatibility = JavaVersion.VERSION_1_10

mainClassName = "se.totalorder.basen.Application"

repositories {
    mavenCentral()
    maven {
        url 'https://dl.bintray.com/palantir/releases'
    }    
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'com.zaxxer:HikariCP:3.2.0'
    compile 'org.flywaydb:flyway-core:5.1.4'
    compile 'org.postgresql:postgresql:42.2.5'
    compile 'io.javalin:javalin:2.2.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.6'
    compile 'com.google.guava:guava:23.5-jre'


    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile('com.palantir.docker.compose:docker-compose-rule-junit4:0.34.0') {
//        exclude group: 'junit', module: 'junit'
    }
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testCompile 'org.junit.jupiter:junit-jupiter-migrationsupport:5.2.0'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

lombok {
    version = "1.18.2"
    sha256 = ""
}

distZip {
    enabled = false
}

task untarDist(type: Copy) {
    dependsOn(distTar)

    ext {
        dockerDir = "${buildDir}/docker/${distTar.archiveName.substring(0, distTar.archiveName.lastIndexOf("."))}"
    }

    from tarTree(distTar.archivePath)
    into "${buildDir}/docker"
}

task copyDockerfile(type: Copy) {
    dependsOn(untarDist)
    from "Dockerfile"
    into untarDist.dockerDir
}

task distDocker(type: Exec) {
    dependsOn(copyDockerfile)

    workingDir untarDist.dockerDir
    commandLine "bash", "-c", "docker build -t ${project.name} ."
}

task buildPostgres(type: Exec) {
    commandLine "bash", "-c", "docker-compose build postgres"
}

task startPostgres(type: Exec) {
    commandLine "bash", "-c", "docker-compose up -d postgres"
}

task stopPostgres(type: Exec) {
    commandLine "bash", "-c", "docker-compose stop -t 0 postgres"
}