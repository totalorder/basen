#!/usr/bin/env bash
cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}"))")" || exit

# Populate NODES
source include/common.sh

if [ ! -z "$1" ]; then
    CONTAINER_ID=$(docker-compose -f compose/swarmhost.yml -f compose/swarmhost-node.yml ps | grep "$1->2375" | cut -d ' ' -f 1)
else
    CONTAINER_ID=$(docker-compose -f compose/swarmhost.yml -f compose/swarmhost-node.yml ps -q | shuf -n 1)
fi

echo "Removing container $CONTAINER_ID"
docker rm -f ${CONTAINER_ID}

CONTAINER_IDS=$(docker-compose -f compose/swarmhost.yml -f compose/swarmhost-node.yml ps --filter state=up -q)

while true; do
    for CONTAINER_ID in ${CONTAINER_IDS}; do
        INSPECT=$(docker inspect ${CONTAINER_ID})
        STATUS=$(echo ${INSPECT} | jq -r '.[].State.Status')
        if [ ${STATUS} == "running" ]; then
            NODE="localhost:$(echo ${INSPECT} | jq -r '.[].NetworkSettings.Ports["2375/tcp"][].HostPort')"
            for N in $(on_node ${NODE} node ls -q); do
                STATE=$(on_node ${NODE} node inspect ${N} | jq -r '.[].Status.State')
                if [ "$STATE" == "down" ]; then
                    echo "Removing $N with state $STATE"
                    on_node ${NODE} node demote ${N}
                    on_node ${NODE} node rm ${N}

                    # Exit if node was removed
                    exit 0
                fi
            done

        fi
    done
    echo "Waiting for node to die..."
    sleep 2
done